; (function (f) { f.fn.drag = function (b, a, d) { var e = typeof b == "string" ? b : "", g = f.isFunction(b) ? b : f.isFunction(a) ? a : null; if (e.indexOf("drag") !== 0) e = "drag" + e; d = (b == g ? a : d) || {}; return g ? this.bind(e, d, g) : this.trigger(e) }; var j = f.event, k = j.special, c = k.drag = { defaults: { which: 1, distance: 0, not: ':input', handle: null, relative: false, drop: true, click: false }, datakey: "dragdata", noBubble: true, add: function (d) { var e = f.data(this, c.datakey), g = d.data || {}; e.related += 1; f.each(c.defaults, function (b, a) { if (g[b] !== undefined) e[b] = g[b] }) }, remove: function () { f.data(this, c.datakey).related -= 1 }, setup: function () { if (f.data(this, c.datakey)) return; var b = f.extend({ related: 0 }, c.defaults); f.data(this, c.datakey, b); j.add(this, "touchstart mousedown", c.init, b); if (this.attachEvent) this.attachEvent("ondragstart", c.dontstart) }, teardown: function () { var b = f.data(this, c.datakey) || {}; if (b.related) return; f.removeData(this, c.datakey); j.remove(this, "touchstart mousedown", c.init); c.textselect(true); if (this.detachEvent) this.detachEvent("ondragstart", c.dontstart) }, init: function (b) { if (c.touched) return; var a = b.data, d; if (b.which != 0 && a.which > 0 && b.which != a.which) return; if (f(b.target).is(a.not)) return; if (a.handle && !f(b.target).closest(a.handle, b.currentTarget).length) return; c.touched = b.type == 'touchstart' ? this : null; a.propagates = 1; a.mousedown = this; a.interactions = [c.interaction(this, a)]; a.target = b.target; a.pageX = b.pageX; a.pageY = b.pageY; a.dragging = null; d = c.hijack(b, "draginit", a); if (!a.propagates) return; d = c.flatten(d); if (d && d.length) { a.interactions = []; f.each(d, function () { a.interactions.push(c.interaction(this, a)) }) } a.propagates = a.interactions.length; if (a.drop !== false && k.drop) k.drop.handler(b, a); c.textselect(false); if (c.touched) j.add(c.touched, "touchmove touchend", c.handler, a); else j.add(document, "mousemove mouseup", c.handler, a); if (!c.touched || a.live) return false }, interaction: function (b, a) { var d = f(b)[a.relative ? "position" : "offset"]() || { top: 0, left: 0 }; return { drag: b, callback: new c.callback(), droppable: [], offset: d} }, handler: function (b) { var a = b.data; switch (b.type) { case !a.dragging && 'touchmove': b.preventDefault(); case !a.dragging && 'mousemove': if (Math.pow(b.pageX - a.pageX, 2) + Math.pow(b.pageY - a.pageY, 2) < Math.pow(a.distance, 2)) break; b.target = a.target; c.hijack(b, "dragstart", a); if (a.propagates) a.dragging = true; case 'touchmove': b.preventDefault(); case 'mousemove': if (a.dragging) { c.hijack(b, "drag", a); if (a.propagates) { if (a.drop !== false && k.drop) k.drop.handler(b, a); break } b.type = "mouseup" } case 'touchend': case 'mouseup': default: if (c.touched) j.remove(c.touched, "touchmove touchend", c.handler); else j.remove(document, "mousemove mouseup", c.handler); if (a.dragging) { if (a.drop !== false && k.drop) k.drop.handler(b, a); c.hijack(b, "dragend", a) } c.textselect(true); if (a.click === false && a.dragging) f.data(a.mousedown, "suppress.click", new Date().getTime() + 5); a.dragging = c.touched = false; break } }, hijack: function (d, e, g, n, r) { if (!g) return; var q = { event: d.originalEvent, type: d.type }, o = e.indexOf("drop") ? "drag" : "drop", l, p = n || 0, h, v, m, s = !isNaN(n) ? n : g.interactions.length; d.type = e; d.originalEvent = null; g.results = []; do if (h = g.interactions[p]) { if (e !== "dragend" && h.cancelled) continue; m = c.properties(d, g, h); h.results = []; f(r || h[o] || g.droppable).each(function (b, a) { m.target = a; d.isPropagationStopped = function () { return false }; l = a ? j.dispatch.call(a, d, m) : null; if (l === false) { if (o == "drag") { h.cancelled = true; g.propagates -= 1 } if (e == "drop") { h[o][b] = null } } else if (e == "dropinit") h.droppable.push(c.element(l) || a); if (e == "dragstart") h.proxy = f(c.element(l) || h.drag)[0]; h.results.push(l); delete d.result; if (e !== "dropinit") return l }); g.results[p] = c.flatten(h.results); if (e == "dropinit") h.droppable = c.flatten(h.droppable); if (e == "dragstart" && !h.cancelled) m.update() } while (++p < s)d.type = q.type; d.originalEvent = q.event; return c.flatten(g.results) }, properties: function (b, a, d) { var e = d.callback; e.drag = d.drag; e.proxy = d.proxy || d.drag; e.startX = a.pageX; e.startY = a.pageY; e.deltaX = b.pageX - a.pageX; e.deltaY = b.pageY - a.pageY; e.originalX = d.offset.left; e.originalY = d.offset.top; e.offsetX = e.originalX + e.deltaX; e.offsetY = e.originalY + e.deltaY; e.drop = c.flatten((d.drop || []).slice()); e.available = c.flatten((d.droppable || []).slice()); return e }, element: function (b) { if (b && (b.jquery || b.nodeType == 1)) return b }, flatten: function (a) { return f.map(a, function (b) { return b && b.jquery ? f.makeArray(b) : b && b.length ? c.flatten(b) : b }) }, textselect: function (b) { f(document)[b ? "unbind" : "bind"]("selectstart", c.dontstart).css("MozUserSelect", b ? "" : "none"); document.unselectable = b ? "off" : "on" }, dontstart: function () { return false }, callback: function () { } }; c.callback.prototype = { update: function () { if (k.drop && this.available.length) f.each(this.available, function (i) { k.drop.locate(this, i) }) } }; var t = j.dispatch; j.dispatch = function (b) { if (f.data(this, "suppress." + b.type) - new Date().getTime() > 0) { f.removeData(this, "suppress." + b.type); return } return t.apply(this, arguments) }; var u = j.fixHooks.touchstart = j.fixHooks.touchmove = j.fixHooks.touchend = j.fixHooks.touchcancel = { props: "clientX clientY pageX pageY screenX screenY".split(" "), filter: function (b, a) { if (a) { var d = (a.touches && a.touches[0]) || (a.changedTouches && a.changedTouches[0]) || null; if (d) f.each(u.props, function (i, prop) { b[prop] = d[prop] }) } return b } }; k.draginit = k.dragstart = k.dragend = c })(jQuery);