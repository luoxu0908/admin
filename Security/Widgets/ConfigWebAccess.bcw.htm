<link rel="stylesheet" href="../styles/jquery.multiselect.css" type="text/css" />
<link rel="stylesheet" href="../styles/jquery.multiselect.filter.css" type="text/css" />
<div id="mainform" class="large-12 columns">
	<div class="row">
		<div class="large-3 columns end">
			<label for="SecretKey">Configuration Key (for making changes)</label><input id="SecretKey" type="text" />
		</div>
	</div>
	<div class="row">
		<div class="large-12 columns">
			<button id="BtnRefresh" onclick="refreshData(); return false;">Refresh</button>
			<button id="BtnAdd" onclick="editWP(); return false;">Add Row</button>
			<button id="BtnReposition" onclick="Reposition(); return false;">Reposition Menu Items</button>
		</div>
	</div>
	<div class="row">
		<div class="large-4 columns">
			<label for="FilterGrid">Filter Grid - All columns</label><input id="FilterGrid" type="text" />
		</div>
		<div class="large-3 columns end">
			<label for="MenuItemsOnly">Menu Items Only</label><input id="MenuItemsOnly" type="checkbox" />
		</div>
	</div>
</div>
<div id="editor" style="display:none">
	<div class="row">
		<div class="large-12 columns">
			<label for="ResURL">Resource URL</label><textarea id="ResURL" rows="2" cols="75"></textarea>
		</div>
	</div>
	<div class="row">
		<div class="large-8 columns">
			<label for="MenuName">Menu Name</label><input id="MenuName" type="text" />
		</div>
		<div class="large-4 columns">
			<label for="SGAccess">Security Group Access</label><select id="SGAccess" multiple="multiple"></select>
		</div>
	</div>
	<div class="row">
		<div class="large-4 columns">
			<label for="CssD">Default Css</label><input id="CssD" type="text" />
		</div>
		<div class="large-4 columns end">
			<label for="CssM">Mouseover Css</label><input id="CssM" type="text" />
		</div>
	</div>
	<div class="row">
		<div class="large-4 columns">
			<label for="TgtFr">Target Frame</label><input id="TgtFr" type="text" />
		</div>
		<div class="large-4 columns end">
			<label for="Context">Context</label><input id="Context" type="text" />
		</div>
	</div>
</div>
<div id="repoEditor" style="display:none">
	<div class="row">
		<div class="large-12 columns">
			<label for="repoMenuList">Menu Item</label><select id="repoMenuList"></select>
		</div>
	</div>
</div>
<script src="../scripts/jquery.multiselect.min.js"></script>
<script src="../scripts/jquery.multiselect.filter.min.js"></script>
<script>
	//bind to custom togShowHide event
	var $mainform = $('#mainform');
	$(document).ready(function () {
		$("#editor").dialog({
			autoOpen: false, height: 385, width: 700, modal: true,
			buttons: [{ id: "BtnUpsert", text: "Save", click: saveWP },
				{ id: "BtnDel", text: "Delete", click: delWP },
				{ id: "BtnCancel", text: "Cancel", click: function () { $(this).dialog("close"); } }] //refresh grid on save so not called here
		});
		LoadSecGroups();
		$("#repoEditor").dialog({
			autoOpen: false, height: 200, width: 450, modal: true,
			buttons: [{ id: "repoBtnDel", text: "Remove", click: repoRemove },
				{ id: "repoBtnUp", text: "Move Up", click: repoMoveUp },
				{ id: "repoBtnDown", text: "Move Down", click: repoMoveDown },
				{ id: "repoBtnClose", text: "Close", click: function () { refreshData(); $(this).dialog("close"); } }] //refresh grid on close, not on save
		});
		$("#FilterGrid").keyup(function (e) {
			if (e.which == 27) this.value = ''; RefreshGridFilter();
		});
		$('#MenuItemsOnly').change(function () { RefreshGridFilter(); });
	});
	$(document).on("togShowHide", function (e) {
		if (e.Show) { $mainform.show(); } else { $mainform.hide(); }
	});

	function GetCustomGridFilterData() {
		return { FilterGrid: ($("#FilterGrid").val() || '').toLowerCase(), MenuItemsOnly: ($('#MenuItemsOnly').is(':checked')) };
	}
	function CustomGridFilter(item, args) {
		if (args.MenuItemsOnly && (item['MenuName'] || '').length == 0) return false;
		if ((args.FilterGrid || '') == '') return true;
		for (var property in item) {
			if (item.hasOwnProperty(property)) {
				switch (typeof (item[property])) {
					case 'string':
						if (item[property].toLowerCase().indexOf(args.FilterGrid) != -1) return true;
						break;
					case 'number': case 'boolean':
						if ((('' + item[property]).toLowerCase()).indexOf(args.FilterGrid) != -1) return true;
						break;
				}
			}
		}
		return false;
	}
	function RefreshGridFilter() {
		SGH.DataView.setFilterArgs(GetCustomGridFilterData()); SGH.DataView.refresh();
	}
	function refreshData() { jQuery.event.trigger({ type: "refreshSG" }); }

	function delWP() {
		var E = $("#editor");
		var ResURL = $("#ResURL", E).val() || "";
		var Cfm = prompt("Are you sure you want to delete " + ResURL + " and its associated permissions? This cannot be undone. To confirm delete, please input 'del' below.");
		if ((Cfm) && (Cfm.toLowerCase() == "del")) {
			$.JSONPost("Sec1.DelWebPermissions.json", { "SecretKey": $("#SecretKey").val(), "ResURL": ResURL })
			.always(function () { refreshData(); })
			.done(function (data, textStatus, jqXHR) {
				E.dialog("close"); data.d.RetMsg = data.d.RetMsg || '';
				if (data.d.RetMsg.length > 0) { $.alert(data.d.RetMsg, { theme: 'growlsuccess', sticky: false }); } else { $.alert('Permission(s) deleted', { theme: 'growlsuccess', sticky: false }); }
			});
		}
	}
	function saveWP() {
		var E = $("#editor");
		var ResURL = $("#ResURL", E).val() || "", MenuName = $("#MenuName", E).val() || "";
		var CssD = $("#CssD", E).val() || "", CssM = $("#CssM", E).val() || "", TgtFr = $("#TgtFr", E).val() || "";
		var Context = $("#Context", E).val() || "", SGIDs = ($("#SGAccess", E).val() || [""]).join(",");
		//validate here first!
		if (ResURL.length == 0) { $.alert("In order to save, please provide a ResURL."); return false; }
		if (SGIDs.length == 0) { $.alert("In order to save, please select at least 1 Security Group."); return false; }
		$.JSONPost("Sec1.UpsertWebPermissions.json", { "SecretKey": $("#SecretKey").val(), "ResURL": ResURL, "MenuName": MenuName, "DefaultCss": CssD, "MouseOverCss": CssM, "TargetFrame": TgtFr, "Context": Context, "SecGroupIDs": SGIDs })
			.always(function () { refreshData(); })
			.done(function (data, textStatus, jqXHR) {
				E.dialog("close"); data.d.RetMsg = data.d.RetMsg || '';
				if (data.d.RetMsg.length > 0) { $.alert(data.d.RetMsg, { theme: 'growlsuccess', sticky: false }); } else { $.alert('Permission(s) added/updated', { theme: 'growlsuccess', sticky: false }); }
			});
	}
	function editWP(RowID) {
		var E = $("#editor");
		var ResURL = "", MenuName = "", CssD = "", CssM = "", TgtFr = "", Context = "{All}";
		if (RowID) {
			var tmpRowID = decodeURIComponent(RowID);
			var R = SGH.getDataView().getItemById(tmpRowID);
			if (!R) { //try alternate
				tmpRowID = tmpRowID.replace(/ /g, '%20');
				R = SGH.getDataView().getItemById(tmpRowID);
			}
			if (R) {
				ResURL = R.RelativeURL; MenuName = R.MenuName;
				CssD = R.DefaultCss, CssM = R.MouseOverCss, TgtFr = R.TargetFrame, Context = R.Context;
			}
		}
		$("#ResURL", E).val(ResURL); $("#MenuName", E).val(MenuName); $("#CssD", E).val(CssD);
		$("#CssM", E).val(CssM); $("#TgtFr", E).val(TgtFr); $("#Context", E).val(Context);
		if (ResURL.length > 0) { $("#BtnDel").show(); } else { $("#BtnDel").hide(); }
		E.dialog("option", "title", (ResURL.length > 0 ? "Edit " + ResURL : "Add New Permission(s)")).dialog("open");
		LoadWebPartSec(ResURL);
	}

	function Reposition() {
		var E = $("#repoEditor");
		E.dialog("option", "title", "Reposition Menu Items").dialog("open");
		repoLoadMenuItems();
	}
	function repoRemove() {
		var SelItem = ($("#repoMenuList").val() || "");
		if (SelItem) {
			var Cfm = prompt("Are you sure you want to remove menu item? This will remove the menu item but not the access permissions. To confirm removal, please input 'remove' below.");
			if ((Cfm) && (Cfm.toLowerCase() == "remove")) {
				$.JSONPost("Sec1.UpsertWebPermissionsMenuPosition.json", { "SecretKey": $("#SecretKey").val(), "MenuSortKeyAndItem": SelItem, "Action": "Del" }).done(function (data) { repoLoadMenuItems(); if (data.d.RetMsg) $.alert(data.d.RetMsg, { theme: 'growlsuccess', sticky: false }); });
			}
		} else {
			$.alert("Please select a menu item to remove.");
		}
	}
	function repoMoveUp() {
		var SelItem = ($("#repoMenuList").val() || "");
		if (SelItem) {
			$.JSONPost("Sec1.UpsertWebPermissionsMenuPosition.json", { "SecretKey": $("#SecretKey").val(), "MenuSortKeyAndItem": SelItem, "Action": "Up" }).done(function (data) { repoLoadMenuItems(data.d.RetData); if (data.d.RetMsg) $.alert(data.d.RetMsg, { theme: 'growlsuccess', sticky: false }); });
		} else {
			$.alert("Please select a menu item to move.");
		}
	}
	function repoMoveDown() {
		var SelItem = ($("#repoMenuList").val() || "");
		if (SelItem) {
			$.JSONPost("Sec1.UpsertWebPermissionsMenuPosition.json", { "SecretKey": $("#SecretKey").val(), "MenuSortKeyAndItem": SelItem, "Action": "Down" }).done(function (data) { repoLoadMenuItems(data.d.RetData); if (data.d.RetMsg) $.alert(data.d.RetMsg, { theme: 'growlsuccess', sticky: false }); });
		} else {
			$.alert("Please select a menu item to move.");
		}
	}

	function LoadWebPartSec(ResURL) {
		var $s = $("#SGAccess").val("").multiselect("refresh");
		if ((ResURL) && (ResURL.length > 0)) {
			$.JSONPost("Sec1.GetWebPermissionsAccessConfig.json", { "ResURL": ResURL })
			.done(function (data) {
				if ((data) && (data.d.RetVal == -1) && (data.d.RetData) && (data.d.RetData.Tbl)) {
					var R = data.d.RetData.Tbl.Rows;
					if ((R) && (R.length > 0)) { $s.val(R[0].SecGroupAccess.split(",")).multiselect("refresh"); }
				}
			});
		}
	}
	function LoadSecGroups() {
		$.JSONPost("Sec1.GetSecGroups.json", {})
			.done(function (data) {
				var R = data.d.RetData.Tbl.Rows;
				var RowCnt = R.length, $sel = $("#SGAccess");
				for (var i = 0; i < RowCnt; i++) {
					$sel.append($('<option>', { value: R[i].SecGroupID }).text(R[i].SecGroupName));
				}
				$sel.multiselect({ selectedList: 20 }).multiselectfilter();
			});
	}
	function repoLoadMenuItems(SelItem) {
		var $sel = $("#repoMenuList");
		if (!(SelItem)) SelItem = ($sel.val() || "");
		$sel.html("");
		$.JSONPost("Sec1.GetWebPermissionsMenuPosition.json", {})
			.done(function (data) {
				$sel.append($('<option>', { value: "" }).text("- Select Menu Item -"));
				var R = data.d.RetData.Tbl.Rows;
				var RowCnt = R.length;
				for (var i = 0; i < RowCnt; i++) {
					$sel.append($('<option>', { value: R[i].MenuSortKey + "|" + R[i].MenuName }).text(R[i].MenuName));
				}
				$sel.val(SelItem);
			});
	}
	window.DoGridInit = true; //ready for SG to init
</script>