<div id="Filter" class="large-12 columns">
	<div class="row">
		<div class="large-3 columns">
			<label for="LookupCat">
				Select Category:</label>
			<select id="LookupCat">
				<option value=""></option>
			</select>
		</div>
	</div>
</div>
<div id="MTool" class="large-12 columns">
	<button onclick="refreshData(); return false;">
		Refresh</button>
	<button onclick="SGH.GridRowDel({ 'RowIDs': SGH.getSelectedRowIDsStr() }); return false;">
		Delete Select</button>
	<button id="Export" onclick="SGH.GridExport({ LookupCat: $LookupCat.val()}); return false;">
		Export</button>
	<button onclick="AddRow();return false;">
		Add New</button>
</div>
<div id="DialogAddNew" title="Add New" style="display: none">
	<div class="row">
		<div class="large-12 columns end">
			<label for="NewLookupCat">
				Category</label><input type="text" id="NewLookupCat" />
		</div>
	</div>
	<div class="row">
		<div class="large-12 columns end">
			<label for="NewLookupKey">
				Key</label>
			<input type="text" id="NewLookupKey" />
		</div>
	</div>
	<div class="row">
		<div class="large-12 columns end">
			<label for="NewLookupvalue">
				value</label>
			<input type="text" id="NewLookupvalue" />
		</div>
	</div>
	<div class="row">
		<div class="large-12 columns end">
			<label for="NewDetails">
				Text / Description</label>
			<textarea id="NewDetails" rows="4"></textarea>
		</div>
	</div>
	<div class="row">
		<div class="large-12 columns end">
			<label for="NewDispOrder">
				Integer value / Display order</label>
			<input type="text" id="NewDispOrder" />
		</div>
	</div>
</div>
<script>
	var $filters = $('#filters'), $MTool = $('#MTool');
	var $AddNewDlg = $('#DialogAddNew'), $LookupCat = $('#LookupCat'), $NewCat = $('#NewLookupCat');
	$(document).on("togShowHide", function (e) {
		if (e.Show) { $filters.show(); $MTool.show(); } else { $filters.hide(); $MTool.hide(); }
	});

	$LookupCat.on("change", function (e) { refreshData() });
	//init
	if (QS.GetLookupCatURL) {
		$.JSONPost(QS.GetLookupCatURL)
		.then(function (data) {
			if ((data) && (data.d.RetVal == -1)) {
				var Tbl = data.d.RetData.Tbl;
				var RowCnt = Tbl.Rows.length;
				if (RowCnt > 0) {
					$.each(Tbl.Rows, function (index, Row) {
						$LookupCat.append($('<option>', { value: Row.LookupCat }).text(Row.LookupCat));
					});
				}
			}
		});
	} else { alert('Developer alert: Please specify the querystring GetLookupCatURL for fetching your lookup category list'); }

	function refreshData() { jQuery.event.trigger({ type: "refreshSG" }); };
	function GetFilterData() {
		var FilterData = { LookupCat: $('#LookupCat').val(), LookupKey: '', LookupValue: '' };
		return FilterData;
	}

	function AddRow() { $AddNewDlg.dialog("open"); }
	$AddNewDlg.dialog({
		autoOpen: false, height: 500, width: 400, modal: true,
		buttons: {
			"Save": function () {
				var Cat = ($NewCat.val() || '');
				var Key = ($('#NewLookupKey').val() || '');
				var Value = ($('#NewLookupvalue').val() || '');
				var Details = ($('#NewDetails').val() || '');
				var DispOrder = ($('#NewDispOrder').val() || '1');
				if (Cat.length > 0) { SGH.GridRowAdd({ "LookupCat": Cat, 'LookupKey': Key, 'Lookupvalue': Value, 'Details': Details, 'DispOrder': DispOrder }); }
				jQuery.event.trigger({ type: "refreshSG" });
				$(this).dialog("close");
			},
			Cancel: function () { $(this).dialog("close"); }
		},
		open: function () {
			$NewCat.val(($LookupCat.val() || ''));
			$('#NewLookupKey').val('');
			$('#NewLookupvalue').val('');
			$('#NewDetails').val('');
			$('#NewDispOrder').val('');
		},
		close: function () { }
	});
	window.DoGridInit = true;
</script>
